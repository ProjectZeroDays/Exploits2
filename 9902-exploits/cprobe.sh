#!/bin/sh
# cprobe v1.0 mass cgi scanner by headflux (hf@efnet)
# public release: Sun Jan 31 17:50:36 EST 1999
# happy birthday present to all the script kiddies
# (as if there aren't enough cgi scanners already
# but out of them all, this is the most complete one
# ive seen)
#
# features: -scans for over 23 cgi scripts with known 
#            security vulnerablities
#           -checks for httpd version information
#           -if server is running frontpage extentions
#            checks for 4 major pwd files
#           -scans a single host or a list of hosts
#           -reports whether file is not found, access
#            is forbidden, a server error was
#            encountered, or connection timed out
#           -logs findings to indivisual files
#
# *requires netcat (nc110.tgz)
#
# usage: cprobe (-f <list>) <hostname> 
#

if [ $# -lt 1 ] || [ $# -gt 2 ]; then
  echo "usage: `basename $0` (-f <list>) <hostname>"
  exit 1
fi

trap 'rm $tmpfile' EXIT
tmpfile=".cprobe.tmp"
logdir="./log"

cgiscripts="phf Count.cgi test-cgi php.cgi handler webgais websendmail
webdist.cgi faxsurvey htmlscript pfdispaly.cgi perl.exe wwwboard.pl
www-sql aglimpse man.sh view-source campas nph-test-cgi wrap info2www
textcounter.pl environ.cgi"

vtipvtfiles="administrators.pwd authors.pwd service.pwd users.pwd"

if [ -d $logdir ]; then
  echo -n
else
  mkdir $logdir
fi

function testscript {
  (echo GET /$3/$2 HTTP/1.0; echo; echo) | nc -w 6 $1 80
}

# function testscript {
#   lynx -dump http://$1/$3/$2
# }

function checkscript {
  if [ -s $tmpfile ]; then

    if grep 404 $tmpfile > /dev/null; then
      echo "--> $script - not found"
 
   elif grep ".ile .ot .ound" $tmpfile > /dev/null; then
      echo "--> $script - not found"
 
   elif grep 403 $tmpfile > /dev/null; then
      echo "--> $script - forbidden"
 
   elif grep 500 $tmpfile > /dev/null; then
      echo "--> $script - server error"
 
   else
      echo "-=> $script - found"
      echo "$1" >> $logdir/$script
    fi
  else
    echo "--> $script - timeout"
  fi
}

function testhost {
  for script in `echo $cgiscripts`; do
    testscript $1 $script cgi-bin > $tmpfile
    checkscript
  done
}

function testfp {
  for script in `echo $vtipvtfiles`; do
    testscript $1 $script _vti_pvt > $tmpfile
    checkscript
  done
}

function testhead {
  (echo "HEAD / HTTP/1.0"; echo; echo) | nc -w 3 $1 80 | grep "Server:"
}

# function testhead {
#   lynx -dump -head http://$1
# }

function cgiprobe {

  testhead $host > $tmpfile

  if grep "FrontPage" $tmpfile > /dev/null; then
    frontpage=yes
  else
    frontpage=no
  fi

  if grep "Server:" $tmpfile > /dev/null; then
    echo
    echo -n "--( $host - "
    grep "Server:" $tmpfile | awk -F'Server: ' '{print $2}'
    echo "$host - `grep "Server:" $tmpfile | awk -F'Server: ' \
    '{print $2}'`" >> $logdir/httpd.version
    echo
    testhost $host

    if [ $frontpage = "yes" ]; then
      echo -e "\n--( Testing FrontPage Extentions:"
      testfp $host
    fi

    echo
  else
    echo -e "\n$host: DEAD\n"
  fi
}

if [ $1 = -f ]; then
  for host in `cat $2`; do
    cgiprobe $host
  done
else
  host=$1
  logdir=/dev/null
  cgiprobe $host
fi

# EOF
